@model PaginatedList<ToKhaiYTe.Models.ViewModel.ManagerIndexViewModel>
@{ 
    string site = "http://www.htntokhaiyte.somee.com";
}
@{
    ViewData["Title"] = "Index";
}

@if (!Model.Any())
 {
    <h1>Chưa có dữ liệu</h1>
    <h3>@ViewBag.Status</h3>
 }
else
{
    
    <table class="table table-responsive table-hover  table-bordered">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["idSortParm"]">@Html.DisplayNameFor(model => model[0].MedicalDelcarationFormId)</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["gateSortParm"]">@Html.DisplayNameFor(model => model[0].Gate)</a> 
                </th>
                <th>
                    <a asp-action="Index"  asp-route-sortOrder="@ViewData["fullNameSortParm"]">@Html.DisplayNameFor(model => model[0].Name)</a> 
                </th>
                <th>
                    @Html.DisplayNameFor(model => model[0].Gender)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model[0].PhoneNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model[0].National)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model[0].Province)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model[0].District)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model[0].Ward)
                </th>
                
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr onclick="document.location = '@site/manager/getfullinfo/@item.MedicalDelcarationFormId';">

                    <td>
                        @Html.DisplayFor(modelItem => item.MedicalDelcarationFormId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Gate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Gender)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.National)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Province)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.District)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Ward)
                    </td>
                    @*<td>
                            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                        </td>*@
                </tr>
            }
        </tbody>
    </table>
}
@{ 
    var previousDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<p>@Model.PageIndex / @Model.TotalPages</p>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["currentSort"]"
   asp-route-pageIndex="@(Model.PageIndex-1)"
   class="btn btn-outline-info @previousDisabled"
   >
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["currentSort"]"
   asp-route-pageIndex="@(Model.PageIndex+1)"
   class="btn btn-outline-info @nextDisabled">
    Next
</a>